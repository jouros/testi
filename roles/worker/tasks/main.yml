---
# tasks file for worker 
- name: Check host
  command: hostname
  register: response

- name: Show response
  debug:
    msg: "{{ response.stdout.split('\n') }}"

- name: Install docker and its dependecies
  apt: 
    name: "{{ packages }}"
    state: present
    update_cache: yes
  register: task_result
  until: task_result is success
  retries: 20
  delay: 2
  vars:
    packages:
    - containerd.io
  notify:
    - containerd status

- name: Hold containerd.io
  dpkg_selections:
    name: containerd.io
    selection: hold
  register: cmd_out

#  - name: Add k8s-admin user to docker group
#    user:
#      name: k8s-admin 
#      group: docker

- name: Install Kubernetes binaries
  apt: 
    name: "{{ packages }}"
    state: present
  register: task_result
  until: task_result is success
  retries: 20
  delay: 2
  vars:
    packages:
      - kubelet 
      - kubeadm 
      - kubectl 

- name: Hold kubelet
  dpkg_selections:
    name: kubelet
    selection: hold
  register: cmd_out

- name: Hold kubeadm
  dpkg_selections:
    name: kubeadm
    selection: hold
  register: cmd_out

- name: Hold kubectl
  dpkg_selections:
    name: kubectl
    selection: hold
  register: cmd_out

- name: Check kubectl version
  command: kubectl version --client
  register: cmd_out

- debug:
    msg: "{{ cmd_out.stdout }}"

- name: Check kubeadm version
  command: kubeadm version
  register: cmd_out

- debug:
    msg: "{{ cmd_out.stdout }}"

- name: Create /etc/modules-load.d/containerd.conf
  copy:
    dest: /etc/modules-load.d/containerd.conf
    content: |
      overlay
      br_netfilter
    owner: root
    group: root
    mode: '0644'

- name: Modprobe overlay
  modprobe:
    name: overlay
    state: present
  register: cmd_out

- name: Modprobe br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  register: cmd_out

- name: Setup required sysctl params, these persist across reboots
  copy:
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
    content: |
     net.bridge.bridge-nf-call-iptables  = 1
     net.ipv4.ip_forward                 = 1
     net.bridge.bridge-nf-call-ip6tables = 1
    owner: root
    group: root
    mode: '0644'

- name: Apply sysctl params without reboot
  command: sysctl --system
  register: cmd_out

- debug:
    msg: "{{ cmd_out.stdout }}"

- name: Mkdir /etc/containerd
  file:
    path: /etc/containerd
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Configure containerd
  shell: | 
    /usr/bin/containerd config default > /etc/containerd/config.toml

- name: Restart containerd
  systemd:
    name: containerd
    state: restarted
    enabled: yes
    daemon-reload: yes

- debug:
    msg: "{{ cmd_out.stdout.split('\n') }}"

- name: Copy the join command to server location
  copy: 
    src: join-command 
    dest: /tmp/join-command.sh 
    mode: '0777'

- name: Join the node to cluster
  command: sh /tmp/join-command.sh
  register: node_join

- debug: 
    msg: "{{ node_join.stdout_lines }}"
...
